{"version":3,"sources":["SortingVisualizer/sortingAlgorithms/SortingAlgorithms.js","SortingVisualizer/SortingVisualizer.jsx","SortingVisualizer/Layout/Header.js","SortingVisualizer/Layout/About.js","App.js","serviceWorker.js","index.js"],"names":["quickSort","array","animations","quickHelp","low","high","pi","pivot","y","x","push","quickParce","length","Heapify","size","num","largest","left","right","heapSort","i","Math","floor","mergeSort","auxArray","slice","mergeSortHelper","startInd","endInd","middleInd","k","j","doMerge","randomIntFromInterval","min","max","random","arraysAreEqual","arrayOne","arrayTwo","SortingVisualizer","props","state","this","resetArray","setState","revert","SortingAlgorithms","arrayBars","document","getElementsByClassName","barOneInd","barTwoInd","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","barHeight","height","complete","barOneHeight","barTwoHeight","javaScriptSortedArray","sort","a","b","SortedArray","console","log","className","map","value","ind","key","onClick","MergeSort","QuickSort","BubbleSort","HeapSort","React","Component","Header","headerStyle","linkStyle","to","textAlign","padding","textDecoration","About","Fragment","App","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4d48bf67.chunk.js","sourcesContent":["export function bubbleSort(array){\r\n    const animations = [];\r\n    for(let i = 0; i <= array.length; i++) {\r\n        for(let j = 0; j < array.length - 1 - i; j++) {\r\n            animations.push([j, j+1]);\r\n            animations.push([j, j+1]);\r\n\r\n            if(array[j] > array[j+1]) {\r\n                animations.push([j, array[j], j+1, array[j+1]]);\r\n                [array[j], array[j+1]] = [array[j+1], array[j]];\r\n            } else {\r\n                animations.push([j, array[j], j, array[j]]);\r\n            }\r\n        }\r\n    }\r\n    return animations;\r\n}\r\n\r\nfunction quickParce(array, low, high, animations) {\r\n    const pivot = array[high];\r\n    let y = low - 1;\r\n\r\n    for(let x = low; x < high; x++) {\r\n        animations.push([x, high]);\r\n        animations.push([x, high]);\r\n        \r\n        if(array[x] < pivot) {\r\n            y++;\r\n            animations.push([x, array[x], y, array[y]]);\r\n            [array[x], array[y]] = [array[y], array[x]];\r\n        } else {\r\n            animations.push([x, array[x], x, array[x]]);\r\n        }\r\n    }\r\n    animations.push([y+1, high]);\r\n    animations.push([y+1, high]);\r\n    animations.push([y+1, array[y+1], high, array[high]]);\r\n    [array[y+1], array[high]] = [array[high], array[y+1]];\r\n    return y+1;\r\n}\r\n\r\nfunction quickHelp(array, low, high, animations) {\r\n    if(low < high) {\r\n        let pi = quickParce(array, low, high, animations);\r\n\r\n        quickHelp(array, low, pi - 1, animations);\r\n        quickHelp(array, pi + 1, high, animations);\r\n    }\r\n}\r\n\r\nexport function quickSort(array){\r\n    const animations = [];\r\n    quickHelp(array, 0, array.length - 1, animations);\r\n\r\n    return animations;\r\n}\r\n\r\nfunction Heapify(array, size, num, animations){\r\n    let largest = num;\r\n    let left = num*2 + 1;\r\n    let right = left + 1;\r\n\r\n    if(left < size && array[largest] < array[left]) {\r\n        animations.push([left, largest]);\r\n        animations.push([left, largest]);\r\n        animations.push([left, array[left], left, array[left]]);\r\n        largest = left;\r\n    }\r\n\r\n    if(right < size && array[largest] < array[right]) {\r\n        animations.push([right, largest]);\r\n        animations.push([right, largest]);\r\n        animations.push([right, array[right], right, array[right]]);\r\n        largest = right;\r\n    }\r\n\r\n    animations.push([largest, num]);\r\n    animations.push([largest, num]);\r\n    animations.push([largest, array[largest], num, array[num]]);\r\n\r\n    if(largest !== num) {\r\n        animations.push([largest, num]);\r\n        animations.push([largest, num]);\r\n        animations.push([largest, array[largest], num, array[num]]);\r\n        [array[largest], array[num]] = [array[num], array[largest]];\r\n\r\n        Heapify(array, size, largest, animations);\r\n    }\r\n}\r\n\r\nexport function heapSort(array){\r\n    const animations = [];\r\n    for(let i = Math.floor(array.length/2) - 1; i >= 0; i--) {\r\n        Heapify(array, array.length, i, animations);\r\n    }\r\n\r\n    for(let x = array.length - 1; x > 0; x--) {\r\n        animations.push([x, 0]);\r\n        animations.push([x, 0]);\r\n        animations.push([x, array[x], 0, array[0]]);\r\n        [array[x], array[0]] = [array[0], array[x]];\r\n        Heapify(array, x, 0, animations);\r\n    }\r\n\r\n    return animations;\r\n}\r\n\r\nfunction mergeSortHelper(array, startInd, endInd, auxArray, animations) {\r\n    if(startInd === endInd) return;\r\n    const middleInd = Math.floor((startInd + endInd) / 2);\r\n    mergeSortHelper(auxArray, startInd, middleInd, array, animations);\r\n    mergeSortHelper(auxArray, middleInd + 1, endInd, array, animations);\r\n    doMerge(array, startInd, middleInd, endInd, auxArray, animations);\r\n}\r\n\r\nfunction doMerge(array, startInd, middleInd, endInd, auxArray, animations) {\r\n    let k = startInd;\r\n    let i = startInd;\r\n    let j = middleInd + 1;\r\n    while(i <= middleInd && j <= endInd) {\r\n        animations.push([i, j]);\r\n        animations.push([i, j]);\r\n        if(auxArray[i] <= auxArray[j]) {\r\n            animations.push([k, auxArray[i]]);\r\n            array[k++] = auxArray[i++];\r\n        } else {\r\n            animations.push([k, auxArray[j]]);\r\n            array[k++] = auxArray[j++];\r\n        }\r\n    }\r\n\r\n    while(i <= middleInd) {\r\n        animations.push([i, i]);\r\n        animations.push([i, i]);\r\n        animations.push([k, auxArray[i]]);\r\n        array[k++] = auxArray[i++];\r\n    }\r\n\r\n    while(j <= endInd) {\r\n        animations.push([j, j]);\r\n        animations.push([j, j]);\r\n        animations.push([k, auxArray[j]]);\r\n        array[k++] = auxArray[j++];\r\n    }\r\n}\r\n\r\nexport function mergeSort(array) {\r\n    const animations = [];\r\n    if(array.length <= 1) return animations;\r\n    const auxArray = array.slice();\r\n    mergeSortHelper(array, 0, array.length - 1, auxArray, animations);\r\n    return animations;\r\n}\r\n\r\n","import React from 'react';\r\nimport * as SortingAlgorithms from './sortingAlgorithms/SortingAlgorithms.js'\r\nimport './SortingVisualizer.css';\r\n\r\nexport class SortingVisualizer extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray() {\r\n        const array = [];\r\n        for(let i = 0; i < 75; i++)\r\n        {\r\n            array.push(randomIntFromInterval(5, 500));\r\n        }\r\n        this.setState({array});\r\n        this.revert();\r\n    }\r\n\r\n    MergeSort() {\r\n        const animations = SortingAlgorithms.mergeSort(this.state.array);\r\n        for(let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i % 3 !== 2;\r\n            if(isColorChange) {\r\n                const [barOneInd, barTwoInd] = animations[i];\r\n                const barOneStyle = arrayBars[barOneInd].style;\r\n                const barTwoStyle = arrayBars[barTwoInd].style;\r\n                const color = i % 3 === 0 ? 'red' : 'black';\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * 2);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [barOneInd, barHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneInd].style;\r\n                    barOneStyle.height = `${barHeight}px`;\r\n                }, i * 2);\r\n            }\r\n            setTimeout(() => {\r\n                this.complete();\r\n            }, animations.length * 2);\r\n        }\r\n    }\r\n\r\n    QuickSort() {\r\n        const animations = SortingAlgorithms.quickSort(this.state.array);\r\n        for(let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i % 3 !== 2;\r\n            if(isColorChange) {\r\n                const [barOneInd, barTwoInd] = animations[i];\r\n                const barTwoStyle = arrayBars[barTwoInd].style;\r\n                const barOneStyle = arrayBars[barOneInd].style;\r\n                const color = i % 3 === 0 ? 'red' : 'black';\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * 2);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [barOneInd, barOneHeight, barTwoInd, barTwoHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneInd].style;\r\n                    const barTwoStyle = arrayBars[barTwoInd].style;\r\n                    barOneStyle.height = `${barTwoHeight}px`;\r\n                    barTwoStyle.height = `${barOneHeight}px`;\r\n                }, i * 2);\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            this.complete();\r\n        }, animations.length * 2);\r\n    }\r\n\r\n    BubbleSort() {\r\n        const animations = SortingAlgorithms.bubbleSort(this.state.array);\r\n        for(let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i % 3 !== 2;\r\n            if(isColorChange) {\r\n                const [barOneInd, barTwoInd] = animations[i];\r\n                const barOneStyle = arrayBars[barOneInd].style;\r\n                const barTwoStyle = arrayBars[barTwoInd].style;\r\n                const color = i % 3 === 0 ? 'red' : 'black';\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * 2);\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [barOneInd, barOneHeight, barTwoInd, barTwoHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneInd].style;\r\n                    const barTwoStyle = arrayBars[barTwoInd].style;\r\n                    barOneStyle.height = `${barTwoHeight}px`;\r\n                    barTwoStyle.height = `${barOneHeight}px`;\r\n                }, i * 2)\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            this.complete();\r\n        }, animations.length * 2);\r\n    }\r\n\r\n    HeapSort() {\r\n        const animations = SortingAlgorithms.heapSort(this.state.array);\r\n        for(let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            const isColorChange = i % 3 !== 2;\r\n            if(isColorChange) {\r\n                const [barOneInd, barTwoInd] = animations[i];\r\n                const barOneStyle = arrayBars[barOneInd].style;\r\n                const barTwoStyle = arrayBars[barTwoInd].style;\r\n                const color = i % 3 === 0 ? 'red' : 'black';\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * 2)\r\n            } else {\r\n                setTimeout(() => {\r\n                    const [barOneInd, barOneHeight, barTwoInd, barTwoHeight] = animations[i];\r\n                    const barOneStyle = arrayBars[barOneInd].style;\r\n                    const barTwoStyle = arrayBars[barTwoInd].style;\r\n                    barOneStyle.height = `${barTwoHeight}px`;\r\n                    barTwoStyle.height = `${barOneHeight}px`;\r\n                }, i * 2)\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            this.complete();\r\n        }, animations.length * 2);\r\n    }\r\n\r\n    complete() {\r\n        for(let i = 0; i < this.state.array.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            setTimeout(() => {\r\n                const barColorStyle = arrayBars[i].style;\r\n                barColorStyle.backgroundColor = 'green';\r\n            }, i * 3)\r\n        }\r\n    }\r\n\r\n    revert() {\r\n        for(let i = 0; i < this.state.array.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            setTimeout(() => {\r\n                const barColorStyle = arrayBars[i].style;\r\n                barColorStyle.backgroundColor = 'black';\r\n            }, i * 2)\r\n        }\r\n    }\r\n\r\n    testAlgo() {\r\n        for(let i = 0; i < 100; i++) {\r\n            const array = [];\r\n            const size = randomIntFromInterval(1, 1000);\r\n            for(let j = 0; j < size; j++) {\r\n                array.push(randomIntFromInterval(-1000, 1000));\r\n            }\r\n\r\n            const javaScriptSortedArray = this.state.array.slice().sort((a, b) => a - b);\r\n            const SortedArray = SortingAlgorithms.heapSort(this.state.array);\r\n\r\n            console.log(arraysAreEqual(javaScriptSortedArray, SortedArray));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {array} = this.state;\r\n\r\n        return (\r\n            <div className=\"array-container\">\r\n                {\r\n                    array.map((value, ind) => (<div className=\"array-bar\" key={ind} style={{height: `${value}px`}}></div>))\r\n                }\r\n                <br />\r\n                <button onClick={() => this.resetArray()}>Generate New Array</button>\r\n                <button onClick={() => this.MergeSort()}>MergeSort</button>\r\n                <button onClick={() => this.QuickSort()}>QuickSort</button>\r\n                <button onClick={() => this.BubbleSort()}>BubbleSort</button>\r\n                <button onClick={() => this.HeapSort()}>HeapSort</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nfunction arraysAreEqual(arrayOne, arrayTwo) {\r\n    if (arrayOne.length !== arrayTwo.length) return false;\r\n    for (let i = 0; i < arrayOne.length; i++) {\r\n      if (arrayOne[i] !== arrayTwo[i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\nexport default SortingVisualizer\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>Sorting Visualizer</h1>\r\n            <Link style={linkStyle} to=\"/about\">About</Link> | <Link style={linkStyle} to=\"/\">Home</Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    backgroundColor: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\nconst linkStyle = {\r\n    color: '#fff',\r\n    textDecoration: 'none'\r\n}","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <React.Fragment>\r\n            <h1>About</h1>\r\n\r\n            <p>This is a project guided by a Clement Mihailescu tutorial</p>\r\n            <p>Tutorial: https://www.youtube.com/watch?v=pFXYym4Wbkc&list=LLdUTSDKoM7uirYykez1cKkg&index=5&t=806s</p>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport Header from './SortingVisualizer/Layout/Header';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport About from './SortingVisualizer/Layout/About';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"container\">\n          <Header />\n          <Route exact path=\"/\" render={props => (<SortingVisualizer />)}/>\n          <Route path=\"/about\" component={About}/>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}